{"ast":null,"code":"import { httpClient } from \"./../utils/HttpClient\";\nimport { HTTP_STOCK_SUCCESS, HTTP_STOCK_FETCHING, HTTP_STOCK_FAILED, server } from \"../constants\";\n\nconst setStateStockToSuccess = payload => ({\n  type: HTTP_STOCK_SUCCESS,\n  payload: payload\n});\n\nconst setStateStockToFetching = () => ({\n  type: HTTP_STOCK_FETCHING\n});\n\nconst setStateStockToFailed = () => ({\n  type: HTTP_STOCK_FAILED\n});\n\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    await httpClient.delete(`${server.PRODUCT_URL}/${id}`);\n    await doGetProducts(dispatch);\n  };\n};\nexport const getProducts = () => {\n  return dispatch => {\n    dispatch(setStateStockToFetching());\n    doGetProducts(dispatch);\n  };\n};\n\nconst doGetProducts = async dispatch => {\n  try {\n    let result = await httpClient.get(server.PRODUCT_URL);\n    dispatch(setStateStockToSuccess(result.data));\n  } catch (error) {\n    alert(JSON.stringify(error));\n    dispatch(setStateStockToFailed());\n  }\n};","map":{"version":3,"sources":["/Users/rangsanchipphang/Documents/SourceCode/React/cmstock-react-js/src/actions/stock.action.js"],"names":["httpClient","HTTP_STOCK_SUCCESS","HTTP_STOCK_FETCHING","HTTP_STOCK_FAILED","server","setStateStockToSuccess","payload","type","setStateStockToFetching","setStateStockToFailed","deleteProduct","id","dispatch","delete","PRODUCT_URL","doGetProducts","getProducts","result","get","data","error","alert","JSON","stringify"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,MAJF,QAKO,cALP;;AAOA,MAAMC,sBAAsB,GAAGC,OAAO,KAAK;AACzCC,EAAAA,IAAI,EAAEN,kBADmC;AAEzCK,EAAAA,OAAO,EAAEA;AAFgC,CAAL,CAAtC;;AAKA,MAAME,uBAAuB,GAAG,OAAO;AACrCD,EAAAA,IAAI,EAAEL;AAD+B,CAAP,CAAhC;;AAIA,MAAMO,qBAAqB,GAAG,OAAO;AACnCF,EAAAA,IAAI,EAAEJ;AAD6B,CAAP,CAA9B;;AAIA,OAAO,MAAMO,aAAa,GAAGC,EAAE,IAAI;AACjC,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACJ,uBAAuB,EAAxB,CAAR;AACA,UAAMR,UAAU,CAACa,MAAX,CAAmB,GAAET,MAAM,CAACU,WAAY,IAAGH,EAAG,EAA9C,CAAN;AACA,UAAMI,aAAa,CAACH,QAAD,CAAnB;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMI,WAAW,GAAG,MAAM;AAC7B,SAAOJ,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACJ,uBAAuB,EAAxB,CAAR;AACAO,IAAAA,aAAa,CAACH,QAAD,CAAb;AACD,GAHD;AAID,CALI;;AAML,MAAMG,aAAa,GAAE,MAAOH,QAAP,IAAkB;AACrC,MAAI;AACF,QAAIK,MAAM,GAAE,MAAOjB,UAAU,CAACkB,GAAX,CAAed,MAAM,CAACU,WAAtB,CAAnB;AACAF,IAAAA,QAAQ,CAACP,sBAAsB,CAACY,MAAM,CAACE,IAAR,CAAvB,CAAR;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAD,CAAL;AACAR,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,CAAR;AACD;AAEF,CATD","sourcesContent":["import { httpClient } from \"./../utils/HttpClient\";\nimport {\n  HTTP_STOCK_SUCCESS,\n  HTTP_STOCK_FETCHING,\n  HTTP_STOCK_FAILED,\n  server\n} from \"../constants\";\n\nconst setStateStockToSuccess = payload => ({\n  type: HTTP_STOCK_SUCCESS,\n  payload: payload\n});\n\nconst setStateStockToFetching = () => ({\n  type: HTTP_STOCK_FETCHING\n});\n\nconst setStateStockToFailed = () => ({\n  type: HTTP_STOCK_FAILED\n});\n\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    await httpClient.delete(`${server.PRODUCT_URL}/${id}`)\n    await doGetProducts(dispatch);\n  };\n};\n\nexport const getProducts = () => {\n    return dispatch => {\n      dispatch(setStateStockToFetching());\n      doGetProducts(dispatch);\n    };\n  };\n  const doGetProducts =async (dispatch)=>{\n    try {\n      let result= await  httpClient.get(server.PRODUCT_URL)\n      dispatch(setStateStockToSuccess(result.data))\n    } catch (error) {\n      alert(JSON.stringify(error))\n      dispatch(setStateStockToFailed())\n    }\n      \n  }"]},"metadata":{},"sourceType":"module"}