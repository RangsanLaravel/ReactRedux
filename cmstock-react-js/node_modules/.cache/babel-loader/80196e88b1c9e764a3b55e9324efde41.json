{"ast":null,"code":"import { HTTP_REGISTER_FETCHING, HTTP_REGISTER_SUCCESS, HTTP_REGISTER_FAILED } from \"../constants\";\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case HTTP_REGISTER_FETCHING:\n      return { ...state,\n        result: null,\n        isFetching: true,\n        isError: false\n      };\n\n    case HTTP_REGISTER_SUCCESS:\n      return { ...state,\n        result: payload,\n        isFetching: false,\n        isError: false\n      };\n\n    case HTTP_REGISTER_FAILED:\n      return { ...state,\n        result: null,\n        isFetching: false,\n        isError: true\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/rangsanchipphang/Documents/SourceCode/React/cmstock-react-js/src/reducers/register.reducer.js"],"names":["HTTP_REGISTER_FETCHING","HTTP_REGISTER_SUCCESS","HTTP_REGISTER_FAILED","initialState","result","isFetching","isError","state","type","payload"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,qBAAjC,EAAwDC,oBAAxD,QAAoF,cAApF;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC1D,UAAQD,IAAR;AACE,SAAKR,sBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,MAAM,EAAE,IAApB;AAA0BC,QAAAA,UAAU,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAP;;AACF,SAAKL,qBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,MAAM,EAAEK,OAApB;AAA6BJ,QAAAA,UAAU,EAAE,KAAzC;AAAgDC,QAAAA,OAAO,EAAE;AAAzD,OAAP;;AACF,SAAKJ,oBAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,MAAM,EAAE,IAApB;AAA0BC,QAAAA,UAAU,EAAE,KAAtC;AAA6CC,QAAAA,OAAO,EAAE;AAAtD,OAAP;;AAEF;AACE,aAAOC,KAAP;AATJ;AAWD,CAZD","sourcesContent":["import { HTTP_REGISTER_FETCHING, HTTP_REGISTER_SUCCESS, HTTP_REGISTER_FAILED } from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case HTTP_REGISTER_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case HTTP_REGISTER_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case HTTP_REGISTER_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}