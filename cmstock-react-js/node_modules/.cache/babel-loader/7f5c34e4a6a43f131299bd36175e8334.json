{"ast":null,"code":"import { HTTP_STOCK_SUCCESS, HTTP_STOCK_FETCHING, HTTP_STOCK_FAILED } from \"../constants\";\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case HTTP_STOCK_SUCCESS:\n      return { ...state,\n        result: payload,\n        isFetching: false,\n        isError: false\n      };\n\n    case HTTP_STOCK_FAILED:\n      return { ...state,\n        result: null,\n        isFetching: false,\n        isError: true\n      };\n\n    case HTTP_STOCK_FETCHING:\n      return { ...state,\n        result: null,\n        isFetching: true,\n        isError: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/rangsanchipphang/Documents/SourceCode/React/cmstock-react-js/src/reducers/stock.reducer.js"],"names":["HTTP_STOCK_SUCCESS","HTTP_STOCK_FETCHING","HTTP_STOCK_FAILED","initialState","result","isFetching","isError","state","type","payload"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,QAIS,cAJT;AAME,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC1D,UAAQD,IAAR;AACE,SAAKR,kBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,MAAM,EAAEK,OAApB;AAA6BJ,QAAAA,UAAU,EAAE,KAAzC;AAAgDC,QAAAA,OAAO,EAAE;AAAzD,OAAP;;AACF,SAAKJ,iBAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,MAAM,EAAE,IAApB;AAA0BC,QAAAA,UAAU,EAAE,KAAtC;AAA6CC,QAAAA,OAAO,EAAE;AAAtD,OAAP;;AACF,SAAKL,mBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,MAAM,EAAE,IAApB;AAA0BC,QAAAA,UAAU,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAP;;AACF;AACE,aAAOC,KAAP;AARJ;AAUD,CAXD","sourcesContent":["import {\n    HTTP_STOCK_SUCCESS,\n    HTTP_STOCK_FETCHING,\n    HTTP_STOCK_FAILED,\n  } from \"../constants\";\n  \n  const initialState = {\n    result: null,\n    isFetching: false,\n    isError: false,  \n  };\n  \n  export default (state = initialState, { type, payload }) => {\n    switch (type) {\n      case HTTP_STOCK_SUCCESS:        \n        return { ...state, result: payload, isFetching: false, isError: false };\n      case HTTP_STOCK_FAILED:\n        return { ...state, result: null, isFetching: false, isError: true };\n      case HTTP_STOCK_FETCHING:\n        return { ...state, result: null, isFetching: true, isError: false };\n      default:\n        return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}